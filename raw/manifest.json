[
    { "updated": "2021-09-05T03:53:47Z", "title": "How is this blog put together", "markdown": "blog-architecture.md", "hidden": true },
    { "updated": "2021-08-03T08:47:27Z", "title": "About", "markdown": "about.md", "hidden": true },
    { "updated": "2019-05-19T20:44:21Z", "title": "A few things about unit testing", "markdown": "presso-pragmatic-unit-testing.md" },
    { "updated": "2018-11-24T23:11:42Z", "title": "LINQ, infinity, laziness and oh my!", "markdown": "linq-tips.md" },
    { "updated": "2019-05-13T09:09:41Z", "title": "Lens (really record viewer / updater) in TypeScript", "markdown": "lens-typescript.md" },
    { "updated": "2018-11-10T03:00:52Z", "title": "Fin", "markdown": "fin.md" },
    { "updated": "2018-11-16T11:04:47Z", "title": "Coding an alternative Vect.index, Type-Driven Development in Idris", "markdown": "index-fin-alternative.md" },
    { "updated": "2018-11-16T11:04:47Z", "title": "callCC in Haskell, and my ultimate Monad", "markdown": "call-cc-my-ultimate-monad.md" },
    { "updated": "2018-11-17T08:30:02Z", "title": "My take on (unit) testing", "markdown": "my-take-on-unit-testing.md" },
    { "updated": "2018-11-25T08:26:59Z", "title": "Serialize like javascript - MergeJSON in Idris!", "markdown": "serialize-like-javascript-the-prototype.md" },
    { "updated": "2018-11-26T05:36:25Z", "title": "Serialize like javascript - the idea", "markdown": "serialize-like-javascript.md" },
    { "updated": "2019-08-01T20:46:33Z", "title": "foldl in terms of foldr", "markdown": "foldr-in-foldl.md" },
    { "updated": "2019-01-12T09:42:22Z", "title": "Inject functions, not interfaces", "markdown": "no-interface-just-use-functions.md" },
    { "updated": "2019-01-20T08:56:54Z", "title": "Make unit testing a breeze by segregating complexity", "markdown": "test-complex-keep-rest-simple.md" },
    { "updated": "2018-12-16T05:19:54Z", "title": "Don't null check, just continue!", "markdown": "dont-pattern-match-just-pass-function.md" },
    { "updated": "2019-01-29T08:02:01Z", "title": "2-layer architecture", "markdown": "two-layer-architecture.md" },
    { "updated": "2019-02-25T09:24:21Z", "title": "Types and tests: JavaScript 10, Idris 0", "markdown": "types-and-tests.md" },
    { "updated": "2019-02-25T10:12:39Z", "title": "Types, names, and type superstition", "markdown": "type-superstition.md" },
    { "updated": "2019-03-25T08:52:38Z", "title": "Out-of-context string template is an anti-pattern", "markdown": "out-of-context-string-template.md" },
    { "updated": "2019-05-13T08:57:58Z", "title": "the magic Const, Identity and tuple", "markdown": "the-const-trickery.md" },
    { "updated": "2019-07-01T20:36:40Z", "title": "Covariance and contravariance", "markdown": "contravariant.md" },
    { "updated": "2019-06-22T04:39:12Z", "title": "T.D.D. is most practical data-driven with pure functions", "markdown": "tdd-data-driven-and-functional.md" },
    { "updated": "2020-07-04T22:33:26Z", "title": "Nesting and positions in covariance and contravariance, ", "markdown": "contravariant-positions.md" },
    { "updated": "2019-08-18T19:37:11Z", "title": "Reducer to reduce, with lens in OO flavour", "markdown": "lens-for-reducer.md" },
    { "updated": "2021-04-25T08:22:48Z", "title": "Dependent types in TypeScript?", "markdown": "dependent-types-typescript.md" },
    { "updated": "2020-04-26T09:11:01Z", "title": "The Diamond, squashed and recovered", "markdown": "the-diamond-kata.md" },
    { "updated": "2020-07-04T22:46:16Z", "title": "Tuck-away and take-one, whatever it takes to look declarative", "markdown": "anything-to-be-declarative.md" },
    { "updated": "2019-03-25T09:07:29Z", "title": "Good code does not matter... not that much", "markdown": "good-code-does-not-matter.md" },
    { "updated": "2020-08-22T23:05:17Z", "title": "Setting CAP loose in real life", "markdown": "cap.md" },
    { "updated": "2020-12-06T05:50:34Z", "title": "The 'Constants' file is an anti-pattern, so is the 'Interface' folder. Placement by functionality, not technical concerns", "markdown": "where-to-place-x.md" },
    { "updated": "2021-01-17T06:48:29Z", "title": "Plain and simple state management", "markdown": "plain-state-management.md" },
    { "updated": "2021-04-11T08:30:45Z", "title": "Self-referenced JSON?", "markdown": "self-reference-json.md" },
    { "updated": "2021-04-17T01:10:20Z", "title": "Also on Comonad and Conway's game of life", "markdown": "conway-comonad.md" },
    { "updated": "2021-04-25T22:25:49Z", "title": "Dependent Types in TypeScript, Seriously", "markdown": "dependent-types-typescript-seriously.md" },
    { "updated": "2021-07-11T10:03:34Z", "title": "Literal type preservation with TypeScript", "markdown": "type-preservation.md" },
    { "updated": "2021-07-14T09:46:17Z", "title": "A truly strongly-typed printf in TypeScript", "markdown": "printf.md" },
    { "updated": "2021-08-03T08:29:18Z", "title": "On accidental code deletion as reason for unit testing", "markdown": "what-if-my-code-is-deleted.md" },
    { "updated": "2021-09-05T07:28:39Z", "title": "The TypeScript Handbook, Optional Parameters and Postel's Law", "markdown": "the-typescript-handbook-and-postels-law.md" },
    { "updated": "2021-09-11T23:16:58Z", "title": "Linq is Lazier, not by too much, just within Range", "markdown": "linq-gets-lazier.md" },
    { "updated": "2022-01-30T03:30:39Z", "title": "Dependency hell? Not if we use functions! For library authors", "markdown": "use-functions-keep-it-open.md" },
    { "updated": "2022-02-08T08:29:32Z", "title": "Your tests may belong elsewhere", "markdown": "where-have-all-the-tests-gone.md" },
    { "updated": "2022-02-19T08:11:50Z", "title": "A taste of Rust", "markdown": "blog-rewrite-in-rust.md" },
    { "updated": "2022-02-28T09:02:38Z", "title": "Architecture? You mean spreadsheets?", "markdown": "tables-for-file-structure.md" },
    { "updated": "2022-03-17T09:11:06Z", "title": "Ad-hoc polymorphism: Same input, different output, still pure", "markdown": "ad-hoc-polymorphism.md" },
    { "updated": "2022-04-02T21:39:36Z", "title": "Types or Operations: keep it closed, or keep it open", "markdown": "dont-close-what-is-open.md" },
    { "updated": "2022-04-27T09:13:10Z", "title": "TypeScript: Convert Union to Tuple/Array, Yes but How?", "markdown":  "typescript-union-to-tuple-array.md" },
    { "updated": "2022-05-16T08:16:16Z", "title": "TypeScript Fireworks: Union, Intersection and Variance", "markdown":  "typescript-co-and-contra-variant.md" },
    { "updated": "2022-06-01T07:44:05Z", "title": "Golang error handling: yes to values, no to exceptions, a win for the future", "markdown":  "go-lang-error-handling.md" },
    { "updated": "2022-07-03T06:11:16Z", "title": "Is TYPEScript Turing complete? Not sure. Game of life? Why not!", "markdown":  "conways-game-of-life-in-TYPEscript.md" },
    { "updated": "2022-07-23T22:34:00Z", "title": "Readability misses the point - look instead at vocabulary", "markdown":  "readability-misses-the-point.md" },
    { "updated": "2022-08-07T17:52:00Z", "title": "Functions and classes don't mix - not always", "markdown":  "class-and-functions-dont-mix.md" },
    { "updated": "2022-08-11T21:37:00Z", "title": "Not assignable? A must-cast situation! TypeScript, wise 'as any'", "markdown":  "typescript-must-cast-situation.md" },
    { "updated": "2022-07-17T13:43:00Z", "title": "On the geometric beauty of programming", "markdown":  "geometric-beauty-of-code-design.md" },
    { "updated": "2022-08-12T21:30:00Z", "title": "Type Witness: not yet TypeScript, sure thing Haskell", "markdown":  "typescript-is-no-witness.md" },
    { "updated": "2022-08-20T22:23:00Z", "title": "Abilities by birth? Separation of types, data and behaviour", "markdown":  "abilities-by-birth.md" },
    { "updated": "2022-09-05T21:23:00Z", "title": "Generics: are you keeping it generic?", "markdown":  "generics-keep-it-generic.md" },
    { "updated": "2022-09-14T17:11:00Z", "title": "Reflections, Broken Promises and Fake generics: the anti-pattern", "markdown":  "fake-generics-the-anti-pattern.md" },
    { "updated": "2022-09-22T21:14:00Z", "title": "void vs unit: Respect the Honesty of void", "markdown":  "dishonest-code-void-vs-unit.md" },
    { "updated": "2022-10-03T11:59:00Z", "title": "PATCH-friendly types: null confusion, undefined envy and maybe maybe", "markdown":  "null-undefined-and-patch-maybe-maybe.md" },
    { "updated": "2022-10-13T21:31:00Z", "title": "Unions are Untagged, and should be Discriminated in TypeScript: undecidable, collapse, and anti-patterns", "markdown":  "untaged-union-undecidable.md" },
    { "updated": "2022-10-29T17:57:00Z", "title": "Postel's law is simple - to fulfil the potential of your code", "markdown":  "postel-what-does-it-mean-really.md" },
    { "updated": "2022-11-06T19:53:00Z", "title": "One recursion for all! Catamorphism step by step", "markdown":  "one-recursion-for-all.md" },
    { "updated": "2022-11-26T18:14:00Z", "title": "Stringly-typed: it's not that simple!", "markdown":  "stringly-typed.md" },
    { "updated": "2022-12-10T16:54:00Z", "title": "Parsing with Parsec: or, optional, retry and back-tracking", "markdown":  "parsec-aoc.md" },
    { "updated": "2023-01-29T22:23:00Z", "title": "Libraries should not provide interfaces for Dependency Injection - and stop asking", "markdown":  "libraries-should-not-provide-interfaces.md" },
    { "updated": "2023-01-30T16:33:00Z", "title": "Composition over aggregation, not just inheritance", "markdown":  "composition-over-aggregation-not-just-inheritance.md" },
    { "updated": "2023-02-18T18:01:00Z", "title": "Convenience Driven Development: the Grandfather Paradox and Equality", "markdown":  "cdd-grandfather-paradox.md" },
    { "updated": "2023-02-21T21:52:00Z", "title": "Convenience Driven Development: A story of two exceptions", "markdown":  "cdd-the-story-of-2-exceptions.md" },
    { "updated": "2023-03-19T16:29:00Z", "title": "extends in TypeScript: inheritance, upper bounds, conditional, distributive and variance", "markdown":  "typescript-extends.md" },
    { "updated": "2023-03-06T22:29:00Z", "title": "State Monad: a bit of currying goes a long way", "markdown":  "state-monad.md" },
    { "updated": "2023-07-09T22:29:00Z", "title": "A Square IS A Rectangle - If Designed Correctly", "markdown":  "a-square-is-a-rectangle.md" },
    { "updated": "2023-07-25T20:14:00Z", "title": "Functional Programming: Choose Haskell / F# Because Syntax Matters", "markdown":  "syntax-matters.md" },
    { "updated": "2023-08-05T22:51:00Z", "title": "DOWN, ISP & IoC: dependency rule #1, and how to stop lying code", "markdown":  "interface-segregation-and-the-down-principle.md" },
    { "updated": "2023-09-02T14:54:00Z", "title": "Constructive code - an aimless exploration", "markdown":  "constructive-code.md" }
]