[
    { "updated": "2021-01-01T01:01:01Z", "title": "How is this blog put together", "markdown": "blog-architecture.md", "hidden": true },
    { "updated": "2021-01-01T01:01:01Z", "title": "About", "markdown": "about.md", "hidden": true },
    { "updated": "2021-01-01T01:01:01Z", "title": "A few things about unit testing", "markdown": "presso-pragmatic-unit-testing.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "LINQ, infinity, laziness and oh my!", "markdown": "linq-tips.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Lens (really record viewer / updater) in TypeScript", "markdown": "lens-typescript.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Fin", "markdown": "fin.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Coding an alternative Vect.index, Type-Driven Development in Idris", "markdown": "index-fin-alternative.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "callCC in Haskell, and my ultimate Monad", "markdown": "call-cc-my-ultimate-monad.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "My take on (unit) testing", "markdown": "my-take-on-unit-testing.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Serialize like javascript - MergeJSON in Idris!", "markdown": "serialize-like-javascript-the-prototype.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Serialize like javascript - the idea", "markdown": "serialize-like-javascript.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "foldl in terms of foldr", "markdown": "foldr-in-foldl.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Inject functions, not interfaces", "markdown": "no-interface-just-use-functions.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Make unit testing a breeze by segregating complexity", "markdown": "test-complex-keep-rest-simple.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Don't null check, just continue!", "markdown": "dont-pattern-match-just-pass-function.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "2-layer architecture", "markdown": "two-layer-architecture.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Types and tests: JavaScript 10, Idris 0", "markdown": "types-and-tests.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Types, names, and type superstition", "markdown": "type-superstition.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Out-of-context string template is an anti-pattern", "markdown": "out-of-context-string-template.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "the magic Const, Identity and tuple", "markdown": "the-const-trickery.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Covariance and contravariance", "markdown": "contravariant.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "T.D.D. is most practical data-driven with pure functions", "markdown": "tdd-data-driven-and-functional.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Nesting and positions in covariance and contravariance, ", "markdown": "contravariant-positions.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Reducer to reduce, with lens in OO flavour", "markdown": "lens-for-reducer.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Dependent types in TypeScript?", "markdown": "dependent-types-typescript.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "The Diamond, squashed and recovered", "markdown": "the-diamond-kata.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Tuck-away and take-one, whatever it takes to look declarative", "markdown": "anything-to-be-declarative.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Good code does not matter... not that much", "markdown": "good-code-does-not-matter.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Setting CAP loose in real life", "markdown": "cap.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "The 'Constants' file is an anti-pattern, so is the 'Interface' folder. Placement by functionality, not technical concerns", "markdown": "where-to-place-x.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Plain and simple state management", "markdown": "plain-state-management.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Self-referenced JSON?", "markdown": "self-reference-json.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Also on Comonad and Conway's game of life", "markdown": "conway-comonad.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Dependent Types in TypeScript, Seriously", "markdown": "dependent-types-typescript-seriously.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Literal type preservation with TypeScript", "markdown": "type-preservation.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "A truly strongly-typed printf in TypeScript", "markdown": "printf.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "On accidental code deletion as reason for unit testing", "markdown": "what-if-my-code-is-deleted.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "The TypeScript Handbook, Optional Parameters and Postel's Law", "markdown": "the-typescript-handbook-and-postels-law.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Linq is Lazier, not by too much, just within Range", "markdown": "linq-gets-lazier.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Dependency hell? Not if we use functions! For library authors", "markdown": "use-functions-keep-it-open.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Your tests may belong elsewhere", "markdown": "where-have-all-the-tests-gone.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "A taste of Rust", "markdown": "blog-rewrite-in-rust.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Architecture? You mean spreadsheets?", "markdown": "tables-for-file-structure.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Ad-hoc polymorphism: Same input, different output, still pure", "markdown": "ad-hoc-polymorphism.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Types or Operations: keep it closed, or keep it open", "markdown": "dont-close-what-is-open.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "TypeScript: Convert Union to Tuple/Array, Yes but How?", "markdown":  "typescript-union-to-tuple-array.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "TypeScript Fireworks: Union, Intersection and Variance", "markdown":  "typescript-co-and-contra-variant.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Golang error handling: yes to values, no to exceptions, a win for the future", "markdown":  "go-lang-error-handling.md" },
    { "updated": "2021-01-01T01:01:01Z", "title": "Is TYPEScript Turing complete? Not sure. Game of life? Why not!", "markdown":  "conways-game-of-life-in-TYPEscript.md" }
]